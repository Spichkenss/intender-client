/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as AuthRestrictImport } from './routes/_auth-restrict'
import { Route as RouteImport } from './routes/route'

// Create Virtual Routes

const ProtectedAccountRouteLazyImport = createFileRoute('/_protected/account')()
const AuthRestrictAuthSignUpRouteLazyImport = createFileRoute(
  '/_auth-restrict/auth/sign-up',
)()
const AuthRestrictAuthSignInRouteLazyImport = createFileRoute(
  '/_auth-restrict/auth/sign-in',
)()

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthRestrictRoute = AuthRestrictImport.update({
  id: '/_auth-restrict',
  getParentRoute: () => rootRoute,
} as any)

const RouteRoute = RouteImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedAccountRouteLazyRoute = ProtectedAccountRouteLazyImport.update({
  path: '/account',
  getParentRoute: () => ProtectedRoute,
} as any).lazy(() =>
  import('./routes/_protected/account/route.lazy').then((d) => d.Route),
)

const AuthRestrictAuthSignUpRouteLazyRoute =
  AuthRestrictAuthSignUpRouteLazyImport.update({
    path: '/auth/sign-up',
    getParentRoute: () => AuthRestrictRoute,
  } as any).lazy(() =>
    import('./routes/_auth-restrict/auth/sign-up/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthRestrictAuthSignInRouteLazyRoute =
  AuthRestrictAuthSignInRouteLazyImport.update({
    path: '/auth/sign-in',
    getParentRoute: () => AuthRestrictRoute,
  } as any).lazy(() =>
    import('./routes/_auth-restrict/auth/sign-in/route.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof RouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth-restrict': {
      preLoaderRoute: typeof AuthRestrictImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_protected/account': {
      preLoaderRoute: typeof ProtectedAccountRouteLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_auth-restrict/auth/sign-in': {
      preLoaderRoute: typeof AuthRestrictAuthSignInRouteLazyImport
      parentRoute: typeof AuthRestrictImport
    }
    '/_auth-restrict/auth/sign-up': {
      preLoaderRoute: typeof AuthRestrictAuthSignUpRouteLazyImport
      parentRoute: typeof AuthRestrictImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  RouteRoute,
  AuthRestrictRoute.addChildren([
    AuthRestrictAuthSignInRouteLazyRoute,
    AuthRestrictAuthSignUpRouteLazyRoute,
  ]),
  ProtectedRoute.addChildren([ProtectedAccountRouteLazyRoute]),
])

/* prettier-ignore-end */
